// <auto-generated />
using LibrarySystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LibrarySystem.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LibrarySystem.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BType")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BookName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Category")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ISBN")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PState")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("LibrarySystem.Models.Library", b =>
                {
                    b.Property<int>("LibraryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("LibraryName")
                        .HasColumnType("varchar(200)");

                    b.HasKey("LibraryId");

                    b.ToTable("Library");
                });

            modelBuilder.Entity("LibrarySystem.Models.Manager", b =>
                {
                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ManagerAccount")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ManagerName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Pwd")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Token")
                        .HasColumnType("varchar(200)");

                    b.HasKey("ManagerId");

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("LibrarySystem.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<int>("LayerIndex")
                        .HasColumnType("int");

                    b.Property<int>("ShelfId")
                        .HasColumnType("int");

                    b.Property<bool>("Tag")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("PositionId");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("LibrarySystem.Models.Shelf", b =>
                {
                    b.Property<int>("ShelfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Layers")
                        .HasColumnType("int");

                    b.Property<int>("LibraryId")
                        .HasColumnType("int");

                    b.HasKey("ShelfId");

                    b.ToTable("Shelf");
                });

            modelBuilder.Entity("LibrarySystem.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Pwd")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Token")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserAccount")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(200)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
